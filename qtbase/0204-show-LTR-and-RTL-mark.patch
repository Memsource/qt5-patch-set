From cdf0894cfd278ff3be49021f693046a04c3a7b0b Mon Sep 17 00:00:00 2001
From: "michal.lazo" <michal.lazo@memsource.com>
Date: Thu, 12 Jul 2018 16:02:25 +0200
Subject: [PATCH] show LTR and RTL mark

---
 src/gui/text/qtextengine.cpp | 14 ++++++++++++--
 src/gui/text/qtextengine_p.h |  5 +++--
 src/gui/text/qtextlayout.cpp |  8 ++++++++
 3 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/src/gui/text/qtextengine.cpp b/src/gui/text/qtextengine.cpp
index 70f7644..8a89889 100644
--- a/src/gui/text/qtextengine.cpp
+++ b/src/gui/text/qtextengine.cpp
@@ -2054,11 +2054,21 @@ void QTextEngine::itemize() const
         case QChar::Space:
         case 0x3000: // IdeologicalSpace
             analysis->flags = QScriptAnalysis::Space;
-            analysis->bidiLevel = bidi.baseLevel;
             break;
         case QChar::Nbsp:
             analysis->flags = QScriptAnalysis::NonBreakingSpace;
-            analysis->bidiLevel = bidi.baseLevel;
+            break;
+        case 0x200e:
+        case 0x200f:
+            if (option.flags() & QTextOption::ShowLineAndParagraphSeparators) {
+                analysis->flags = QScriptAnalysis::BidiOperator;
+                const int offset = uc - string;
+                layoutData->string.detach();
+                string = reinterpret_cast<const ushort *>( layoutData->string.unicode() );
+                uc = string + offset;
+                e = string + length;
+                *const_cast<ushort*>( uc ) = 0x3000;
+            }
             break;
         default:
             analysis->flags = QScriptAnalysis::None;
diff --git a/src/gui/text/qtextengine_p.h b/src/gui/text/qtextengine_p.h
index d7a09bb..8db8eb6 100644
--- a/src/gui/text/qtextengine_p.h
+++ b/src/gui/text/qtextengine_p.h
@@ -143,9 +143,10 @@ struct Q_AUTOTEST_EXPORT QScriptAnalysis
         Space = 5,
         SpaceTabOrObject = Space,
         NonBreakingSpace = 6,
-        Tab = 7,
+        BidiOperator = 7,
+        Tab = 8,
         TabOrObject = Tab,
-        Object = 8
+        Object = 9
     };
     enum BidiFlags {
         BidiBN = 1,
diff --git a/src/gui/text/qtextlayout.cpp b/src/gui/text/qtextlayout.cpp
index c8dd6e1..b3689b2 100644
--- a/src/gui/text/qtextlayout.cpp
+++ b/src/gui/text/qtextlayout.cpp
@@ -2632,6 +2632,14 @@ void QTextLine::draw(QPainter *p, const QPointF &pos, const QTextLayout::FormatR
                 }
                 p->drawText(pos, visualLine);
                 p->setPen(pen);
+            } else if( ( eng->option.flags() & QTextOption::ShowLineAndParagraphSeparators ) &&
+                     si.analysis.flags == QScriptAnalysis::BidiOperator ) {
+                QBrush c = format.foreground();
+                if( c.style() != Qt::NoBrush )
+                    p->setPen( c.color() );
+
+                p->drawText( pos, QChar(si.analysis.bidiLevel%2? (ushort)0x21b0 : (ushort)0x21b1) );
+                p->setPen( pen );
             } else {
                 QPainterPrivate::get(p)->drawTextItem(pos, gf, eng);
             }
-- 
2.9.2.windows.1

